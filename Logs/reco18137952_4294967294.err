/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/dimred_venv/lib/python3.11/site-packages/pennylane/math/interface_utils.py:127: UserWarning: Contains tensors of types {'autograd', 'autoencoder8'}; dispatch will prioritize TensorFlow, PyTorch, and Jax over Autograd. Consider replacing Autograd with vanilla NumPy.
  warnings.warn(
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:152: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
