/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
/leonardo/home/userexternal/forazi00/Dim_red_swap_Leo/reconstruction_fidelity.py:85: FutureWarning: The behavior of DataFrame concatenation with empty or all-NA entries is deprecated. In a future version, this will no longer exclude empty or all-NA columns when determining the result dtypes. To retain the old behavior, exclude the relevant entries before the concat operation.
  res= pd.concat([res,pd.DataFrame([d])])
slurmstepd: error: *** JOB 17011335 ON lrdn4977 CANCELLED AT 2025-06-25T18:00:29 ***
